{"ast":null,"code":"var _jsxFileName = \"/Users/pm/Desktop/ai-support-bot-starter/client/src/ChatWidget.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './ChatWidget.css';\nimport avatar from './assets/bot-avatar.png';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ChatWidget() {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [isTyping, setIsTyping] = useState(false);\n  const messagesEndRef = useRef(null);\n  const toggleChat = () => setIsOpen(!isOpen);\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    const userMessage = {\n      role: 'user',\n      content: input\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setInput('');\n    setIsTyping(true);\n    try {\n      const response = await fetch('/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message: input\n        })\n      });\n      const data = await response.json();\n      const botMessage = {\n        role: 'assistant',\n        content: data.message\n      };\n      setMessages(prev => [...prev, botMessage]);\n    } catch (err) {\n      setMessages(prev => [...prev, {\n        role: 'assistant',\n        content: 'Sorry, something went wrong.'\n      }]);\n    } finally {\n      setIsTyping(false);\n    }\n  };\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages, isTyping]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isOpen ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbot-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatbot-header-left\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: avatar,\n            alt: \"Dijon\",\n            className: \"chatbot-avatar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"chatbot-title\",\n            children: \"Dijon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleChat,\n          className: \"close-button\",\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbot-messages\",\n        children: [messages.map((msg, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `chatbot-message ${msg.role}`,\n          children: msg.content\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this)), isTyping && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"typing-indicator\",\n          children: \"Dijon is typing...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbot-input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: input,\n          onChange: e => setInput(e.target.value),\n          onKeyDown: e => e.key === 'Enter' && sendMessage(),\n          className: \"chatbot-input\",\n          placeholder: \"Type your message...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          className: \"send-button\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleChat,\n      className: \"floating-chat-button\",\n      children: \"\\uD83D\\uDCAC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(ChatWidget, \"3YMJqRw8XSCD05nfE9m0CSoFjH8=\");\n_c = ChatWidget;\nexport default ChatWidget;\nvar _c;\n$RefreshReg$(_c, \"ChatWidget\");","map":{"version":3,"names":["React","useState","useEffect","useRef","avatar","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatWidget","_s","isOpen","setIsOpen","messages","setMessages","input","setInput","isTyping","setIsTyping","messagesEndRef","toggleChat","sendMessage","trim","userMessage","role","content","prev","response","fetch","method","headers","body","JSON","stringify","message","data","json","botMessage","err","_messagesEndRef$curre","current","scrollIntoView","behavior","children","className","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","msg","i","ref","value","onChange","e","target","onKeyDown","key","placeholder","_c","$RefreshReg$"],"sources":["/Users/pm/Desktop/ai-support-bot-starter/client/src/ChatWidget.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './ChatWidget.css';\nimport avatar from './assets/bot-avatar.png';\n\nfunction ChatWidget() {\n  const [isOpen, setIsOpen] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [isTyping, setIsTyping] = useState(false);\n  const messagesEndRef = useRef(null);\n\n  const toggleChat = () => setIsOpen(!isOpen);\n\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n\n    const userMessage = { role: 'user', content: input };\n    setMessages(prev => [...prev, userMessage]);\n    setInput('');\n    setIsTyping(true);\n\n    try {\n      const response = await fetch('/chat', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ message: input }),\n      });\n      const data = await response.json();\n      const botMessage = { role: 'assistant', content: data.message };\n      setMessages(prev => [...prev, botMessage]);\n    } catch (err) {\n      setMessages(prev => [...prev, { role: 'assistant', content: 'Sorry, something went wrong.' }]);\n    } finally {\n      setIsTyping(false);\n    }\n  };\n\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [messages, isTyping]);\n\n  return (\n    <>\n      {isOpen ? (\n        <div className=\"chatbot-container\">\n          <div className=\"chatbot-header\">\n            <div className=\"chatbot-header-left\">\n              <img src={avatar} alt=\"Dijon\" className=\"chatbot-avatar\" />\n              <span className=\"chatbot-title\">Dijon</span>\n            </div>\n            <button onClick={toggleChat} className=\"close-button\">&times;</button>\n          </div>\n          <div className=\"chatbot-messages\">\n            {messages.map((msg, i) => (\n              <div key={i} className={`chatbot-message ${msg.role}`}>\n                {msg.content}\n              </div>\n            ))}\n            {isTyping && <div className=\"typing-indicator\">Dijon is typing...</div>}\n            <div ref={messagesEndRef} />\n          </div>\n          <div className=\"chatbot-input-container\">\n            <input\n              value={input}\n              onChange={(e) => setInput(e.target.value)}\n              onKeyDown={(e) => e.key === 'Enter' && sendMessage()}\n              className=\"chatbot-input\"\n              placeholder=\"Type your message...\"\n            />\n            <button onClick={sendMessage} className=\"send-button\">Send</button>\n          </div>\n        </div>\n      ) : (\n        <button onClick={toggleChat} className=\"floating-chat-button\">ðŸ’¬</button>\n      )}\n    </>\n  );\n}\n\nexport default ChatWidget;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}