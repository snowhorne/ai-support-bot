{"ast":null,"code":"var _jsxFileName = \"/Users/pm/Desktop/ai-support-bot-starter/client/src/ChatWidget.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './ChatWidget.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatWidget() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const sendMessage = async () => {\n    const userMessage = {\n      sender: 'user',\n      text: input\n    };\n    setMessages([...messages, userMessage]);\n    setInput('');\n    const response = await fetch('/api/chat', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        message: input\n      })\n    });\n    const data = await response.json();\n    const botMessage = {\n      sender: 'bot',\n      text: data.reply\n    };\n    setMessages([...messages, userMessage, botMessage]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-widget\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages\",\n      children: messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: msg.sender,\n        children: msg.text\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: input,\n      onChange: e => setInput(e.target.value),\n      placeholder: \"Ask me something...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatWidget, \"HDAtGPGcvWga1zf1TBXg51T+tsc=\");\n_c = ChatWidget;\nexport default ChatWidget;\nvar _c;\n$RefreshReg$(_c, \"ChatWidget\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ChatWidget","_s","messages","setMessages","input","setInput","sendMessage","userMessage","sender","text","response","fetch","method","headers","body","JSON","stringify","message","data","json","botMessage","reply","className","children","map","msg","idx","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/pm/Desktop/ai-support-bot-starter/client/src/ChatWidget.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport './ChatWidget.css';\n\nfunction ChatWidget() {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n\n  const sendMessage = async () => {\n    const userMessage = { sender: 'user', text: input };\n    setMessages([...messages, userMessage]);\n    setInput('');\n\n    const response = await fetch('/api/chat', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ message: input }),\n    });\n    const data = await response.json();\n    const botMessage = { sender: 'bot', text: data.reply };\n    setMessages([...messages, userMessage, botMessage]);\n  };\n\n  return (\n    <div className=\"chat-widget\">\n      <div className=\"messages\">\n        {messages.map((msg, idx) => (\n          <div key={idx} className={msg.sender}>\n            {msg.text}\n          </div>\n        ))}\n      </div>\n      <input\n        value={input}\n        onChange={(e) => setInput(e.target.value)}\n        placeholder=\"Ask me something...\"\n      />\n      <button onClick={sendMessage}>Send</button>\n    </div>\n  );\n}\n\nexport default ChatWidget;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMS,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,MAAMC,WAAW,GAAG;MAAEC,MAAM,EAAE,MAAM;MAAEC,IAAI,EAAEL;IAAM,CAAC;IACnDD,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEK,WAAW,CAAC,CAAC;IACvCF,QAAQ,CAAC,EAAE,CAAC;IAEZ,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAC,WAAW,EAAE;MACxCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,OAAO,EAAEb;MAAM,CAAC;IACzC,CAAC,CAAC;IACF,MAAMc,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;IAClC,MAAMC,UAAU,GAAG;MAAEZ,MAAM,EAAE,KAAK;MAAEC,IAAI,EAAES,IAAI,CAACG;IAAM,CAAC;IACtDlB,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEK,WAAW,EAAEa,UAAU,CAAC,CAAC;EACrD,CAAC;EAED,oBACErB,OAAA;IAAKuB,SAAS,EAAC,aAAa;IAAAC,QAAA,gBAC1BxB,OAAA;MAAKuB,SAAS,EAAC,UAAU;MAAAC,QAAA,EACtBrB,QAAQ,CAACsB,GAAG,CAAC,CAACC,GAAG,EAAEC,GAAG,kBACrB3B,OAAA;QAAeuB,SAAS,EAAEG,GAAG,CAACjB,MAAO;QAAAe,QAAA,EAClCE,GAAG,CAAChB;MAAI,GADDiB,GAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAER,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACN/B,OAAA;MACEgC,KAAK,EAAE3B,KAAM;MACb4B,QAAQ,EAAGC,CAAC,IAAK5B,QAAQ,CAAC4B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC1CI,WAAW,EAAC;IAAqB;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,eACF/B,OAAA;MAAQqC,OAAO,EAAE9B,WAAY;MAAAiB,QAAA,EAAC;IAAI;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAEV;AAAC7B,EAAA,CApCQD,UAAU;AAAAqC,EAAA,GAAVrC,UAAU;AAsCnB,eAAeA,UAAU;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}